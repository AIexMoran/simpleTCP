// Code generated by MockGen. DO NOT EDIT.
// Source: mainInterface.go

package mock_main

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockClientListenerInterface is a mock of ClientListenerInterface interface
type MockClientListenerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockClientListenerInterfaceMockRecorder
}

// MockClientListenerInterfaceMockRecorder is the mock recorder for MockClientListenerInterface
type MockClientListenerInterfaceMockRecorder struct {
	mock *MockClientListenerInterface
}

// NewMockClientListenerInterface creates a new mock instance
func NewMockClientListenerInterface(ctrl *gomock.Controller) *MockClientListenerInterface {
	mock := &MockClientListenerInterface{ctrl: ctrl}
	mock.recorder = &MockClientListenerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockClientListenerInterface) EXPECT() *MockClientListenerInterfaceMockRecorder {
	return _m.recorder
}

// SendMessage mocks base method
func (_m *MockClientListenerInterface) SendMessage(_param0 string) {
	_m.ctrl.Call(_m, "SendMessage", _param0)
}

// SendMessage indicates an expected call of SendMessage
func (_mr *MockClientListenerInterfaceMockRecorder) SendMessage(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "SendMessage", reflect.TypeOf((*MockClientListenerInterface)(nil).SendMessage), arg0)
}

// ReadMessage mocks base method
func (_m *MockClientListenerInterface) ReadMessage() (string, bool) {
	ret := _m.ctrl.Call(_m, "ReadMessage")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// ReadMessage indicates an expected call of ReadMessage
func (_mr *MockClientListenerInterfaceMockRecorder) ReadMessage() *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "ReadMessage", reflect.TypeOf((*MockClientListenerInterface)(nil).ReadMessage))
}
